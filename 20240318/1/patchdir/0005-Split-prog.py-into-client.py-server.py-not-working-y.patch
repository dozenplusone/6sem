From c371417cfb9d5e3e6724d684739fd9d70030d27c Mon Sep 17 00:00:00 2001
From: Valery Zabrovsky <valthebrewer@yandex.ru>
Date: Sun, 24 Mar 2024 15:33:59 +0300
Subject: [PATCH 05/16] Split prog.py into client.py & server.py (not working
 yet)

---
 20240318/1/{prog.py => client.py} | 37 ------------------
 20240318/1/server.py              | 64 +++++++++++++++++++++++++++++++
 2 files changed, 64 insertions(+), 37 deletions(-)
 rename 20240318/1/{prog.py => client.py} (75%)
 create mode 100644 20240318/1/server.py

diff --git a/20240318/1/prog.py b/20240318/1/client.py
similarity index 75%
rename from 20240318/1/prog.py
rename to 20240318/1/client.py
index a79a413..b0de370 100644
--- a/20240318/1/prog.py
+++ b/20240318/1/client.py
@@ -4,43 +4,6 @@ import shlex
 from custom import custom
 
 
-class Player:
-    def __init__(self, x: int = 0, y: int = 0):
-        assert 0 <= x <= 9 and 0 <= y <= 9, "Invalid initial position"
-        self.x, self.y = x, y
-
-    def move(self, dx, dy):
-        self.x = (self.x + dx) % 10
-        self.y = (self.y + dy) % 10
-        encounter(self.x, self.y)
-
-    def attack(self, name, damage):
-        if ((self.x, self.y) not in monsters
-                or monsters[self.x, self.y].name != name):
-            print(f"No {name} here")
-            return
-        damage = min(monsters[self.x, self.y].hp, damage)
-        monsters[self.x, self.y].hp -= damage
-        print(f"Attacked {monsters[self.x, self.y].name}, damage {damage} hp")
-        if monsters[self.x, self.y].hp > 0:
-            print(f"{monsters[self.x, self.y].name} now has",
-                  monsters[self.x, self.y].hp)
-        else:
-            print(monsters[self.x, self.y].name, "died")
-            del monsters[self.x, self.y]
-
-
-p1 = Player()
-
-
-class Monster:
-    def __init__(self, name: str, text: str, hp: int):
-        self.name, self.text, self.hp = name, text, hp
-
-
-monsters = {}
-
-
 def encounter(x, y):
     if (x, y) not in monsters:
         return
diff --git a/20240318/1/server.py b/20240318/1/server.py
new file mode 100644
index 0000000..2582ce0
--- /dev/null
+++ b/20240318/1/server.py
@@ -0,0 +1,64 @@
+import cmd
+import cowsay
+import shlex
+from custom import custom
+
+
+class Player:
+    def __init__(self, x: int = 0, y: int = 0):
+        assert 0 <= x <= 9 and 0 <= y <= 9, "Invalid initial position"
+        self.x, self.y = x, y
+
+    def move(self, dx, dy):
+        self.x = (self.x + dx) % 10
+        self.y = (self.y + dy) % 10
+        encounter(self.x, self.y)
+
+    def attack(self, name, damage):
+        if ((self.x, self.y) not in monsters
+                or monsters[self.x, self.y].name != name):
+            print(f"No {name} here")
+            return
+        damage = min(monsters[self.x, self.y].hp, damage)
+        monsters[self.x, self.y].hp -= damage
+        print(f"Attacked {monsters[self.x, self.y].name}, damage {damage} hp")
+        if monsters[self.x, self.y].hp > 0:
+            print(f"{monsters[self.x, self.y].name} now has",
+                  monsters[self.x, self.y].hp)
+        else:
+            print(monsters[self.x, self.y].name, "died")
+            del monsters[self.x, self.y]
+
+
+p1 = Player()
+
+
+class Monster:
+    def __init__(self, name: str, text: str, hp: int):
+        self.name, self.text, self.hp = name, text, hp
+
+
+monsters = {}
+
+
+def encounter(x, y):
+    if (x, y) not in monsters:
+        return
+    monster = monsters[x, y]
+    if monster.name in custom:
+        print(cowsay.cowsay(monster.text, cowfile=custom[monster.name]))
+    else:
+        print(cowsay.cowsay(monster.text, cow=monster.name))
+
+
+def addmon(coords, args):
+    flag = coords in monsters
+    try:
+        monsters[coords] = Monster(**args)
+    except AssertionError as err:
+        print(err)
+        return
+    print("Added monster", args["name"], f"(hp={args['hp']}) to", coords,
+          "saying", args["text"])
+    if flag:
+        print("Replaced the old monster")
-- 
2.40.1

